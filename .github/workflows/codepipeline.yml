name: Trigger AWS CodePipeline
run-name: ${{ github.ref_name }}„ÇídevÁí∞Â¢É„Å∏„Éá„Éó„É≠„Ç§üöÄ

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Verify AWS authe  ntication
        run: aws sts get-caller-identity

      # - name: Fetch current CodePipeline definition
      #   run: |
      #     aws codepipeline get-pipeline --name trigger-github-actions --query 'pipeline' > pipeline-definition.json

      # - name: Modify CodePipeline Source Stage
      #   run: |
      #     echo "Creating updated pipeline definition"

      #     # „Éñ„É©„É≥„ÉÅÂêç„ÇíÂ§âÊõ¥
      #     jq --arg branch "${{ github.ref_name }}" '.stages[0].actions[0].configuration.BranchName=$branch | {pipeline: .}' pipeline-definition.json > updated-pipeline-definition.json

      #     # Á¢∫Ë™ç„É≠„Ç∞
      #     echo "Updated pipeline definition:"
      #     cat updated-pipeline-definition.json

      #     # Êõ¥Êñ∞ÂèçÊò†
      #     aws codepipeline update-pipeline --cli-input-json file://updated-pipeline-definition.json --query 'pipeline.name'

      - name: Trigger CodeBuild
        id: codebuild
        run: |
          build_id=$(aws codebuild start-build \
            --project-name trigger-github-actions \
            --source-version ${{ github.ref_name }} \
            --query 'build.id' --output text)
          echo "::set-output name=build_id::$build_id"

      - name: Wait for CodeBuild to complete
        id: wait_for_codebuild
        run: |
          build_status=$(aws codebuild batch-get-builds --ids ${{ steps.codebuild.outputs.build_id }} --query 'builds[0].buildStatus' --output text)
          while [ "$build_status" == "IN_PROGRESS" ]; do
            sleep 10
            build_status=$(aws codebuild batch-get-builds --ids ${{ steps.codebuild.outputs.build_id }} --query 'builds[0].buildStatus' --output text)
          done
          echo "::set-output name=build_status::$build_status"

      - name: Trigger CodePipeline
        run: aws codepipeline start-pipeline-execution --name trigger-github-actions